name: CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
  workflow_dispatch:

jobs:
  lint-and-build:
    name: Lint & Package Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          version: 'latest'
          
      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-
            
      - name: Install dependencies
        run: |
          uv venv
          . .venv/bin/activate
          uv pip install -e .
          uv pip install ruff
          
      - name: Lint with Ruff
        run: |
          . .venv/bin/activate
          ruff check src/ --output-format=github
          
      - name: Check code formatting
        run: |
          . .venv/bin/activate
          ruff format --check src/
          
      - name: Verify package builds
        run: |
          . .venv/bin/activate
          uv pip install build
          python -m build
          
      - name: Check package metadata
        run: |
          . .venv/bin/activate
          uv pip install twine
          twine check dist/*
